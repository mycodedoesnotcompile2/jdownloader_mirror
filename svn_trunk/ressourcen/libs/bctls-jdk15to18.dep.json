{
  "artefact":"org.bouncycastle/bctls-jdk15to18",
  "dependencies":null,
  "filter":[
    ".*?-jdk15to18\\.jar",
    ".+(-sources)?\\.jar$"
  ],
  "history":[
    {
      "changes":null,
      "date":"2024-04-24T11:44:16+02:00",
      "dependencies":[
        {
          "groupId":"org.bouncycastle",
          "artifactId":"bcprov-jdk15to18",
          "version":"1.78.1",
          "type":"jar"
        },
        {
          "groupId":"org.bouncycastle",
          "artifactId":"bcutil-jdk15to18",
          "version":"1.78.1",
          "type":"jar"
        }
      ],
      "description":"The Bouncy Castle Java APIs for TLS and DTLS, including a provider for the JSSE.",
      "files":null,
      "hashes":{"bctls-jdk15on.jar":"b7ac4d55c1852e306f7771fa654bcaa1ffc18d67adb4d4f6c1f98f82e2757ef0"},
      "licenses":[{
        "name":"Bouncy Castle Licence",
        "url":"http://www.bouncycastle.org/licence.html",
        "distribution":"repo"
      }],
      "minJRE":"JVM_1_5",
      "name":"Bouncy Castle JSSE provider and TLS/DTLS API",
      "version":"1.78.1"
    },
    {
      "changes":"1.79\t: Defects Fixed\r\n - Leading zeroes were sometimes dropped from Ed25519 signatures leading to verification errors in the PGP API. This has been fixed.\r\n - Default version string for Armored Output is now set correctly in 18on build.\r\n - The Elephant cipher would fail on large messages. This has been fixed.\r\n - CMSSignedData.replaceSigners() would re-encode the digest algorithms block, occassionally dropping ones where NULL had been previously added as an algorithm parameter. The method now attempts to only use the original digest algorithm identifiers.\r\n - ERSInputStreamData would fail to generate the correct hash if called a second time with a different hash algorithm. This has been fixed.\r\n - A downcast in the CrlCache which would cause FTP based CRLs to fail to load has been removed.\r\n - ECUtil.getNamedCurveOid() now trims curve names of excess space before look up.\r\n - The PhotonBeetle and Xoodyak did not reset properly after a doFinal() call. This has been fixed.\r\n - Malformed AlgorithmIdentifiers in CertIDs could cause caching issues in the OCSP cache. This has been fixed.\r\n - With Java 21 a provider service class will now be returned with a null class name where previously a null would have been returned for a service. This can cause a NullPointerException to be thrown by the BC provider if a non-existant service is requested. This issue has now been worked around.\r\n - CMS: OtherKeyAttribute.keyAttr now treated as optional.\r\n - CMS: EnvelopedData and AuthEnvelopedData could calculate the wrong versions. This has been fixed.\r\n \r\nAdditional Features and Functionality\r\n - Object Identifiers have been added for ML-KEM, ML-DSA, and SLH-DSA.\r\n - The PQC algorithms, ML-KEM, ML-DSA (including pre-hash), and SLH-DSA (including pre-hash) have been added to the BC provider and the lightweight API.\r\n - A new spec, ContextParameterSpec, has been added to support signature contexts for ML-DSA and SLH-DSA.\r\n - BCJSSE: Added support for security property \"jdk.tls.server.defaultDHEParameters\" (disabled in FIPS mode).\r\n - BCJSSE: Added support for signature_algorithms_cert configuration via \"org.bouncycastle.jsse.client.SignatureSchemesCert\" and \"org.bouncycastle.jsse.server.SignatureSchemesCert\" system properties or BCSSLParameters property \"SignatureSchemesCert\".\r\n - BCJSSE: Added support for boolean system property \"org.bouncycastle.jsse.fips.allowGCMCiphersIn12\" (false by default).\r\n - (D)TLS: Remove redundant verification of self-generated RSA signatures.\r\n - CompositePrivateKeys now support the latest revision of the composite signature draft.\r\n - Delta Certificates now support the latest revision of the delta certificate extension draft.\r\n - A general KeyIdentifier class, encapsulating both PGP KeyID and the PGP key fingerprint has been added to the PGP API.\r\n - Support for the LibrePGP PreferredEncryptionModes signature subpacket has been added to the PGP API.\r\n - Support Version 6 signatures, including salts, has been added to the PGP API.\r\n - Support for the PreferredKeyServer signature supacket has been added to the PGP API.\r\n - Support for RFC 9269, \"Using KEMs in Cryptographic Message Syntax (CMS)\", has been added to the CMS API.\r\n - Support for the Argon2 S2K has been added to the PGP API.\r\n - The system property \"org.bouncycastle.pemreader.lax\" has been introduced for situations where the BC PEM parsing is now too strict.\r\n - The system property \"org.bouncycastle.ec.disable_f2m\" has been introduced to allow F2m EC support to be disabled.",
      "date":"2024-10-30T13:45:45.711+01:00",
      "dependencies":[
        {
          "groupId":"org.bouncycastle",
          "artifactId":"bcprov-jdk15to18",
          "version":"1.79",
          "type":"jar"
        },
        {
          "groupId":"org.bouncycastle",
          "artifactId":"bcutil-jdk15to18",
          "version":"1.79",
          "type":"jar"
        }
      ],
      "description":"The Bouncy Castle Java APIs for TLS and DTLS, including a provider for the JSSE.",
      "files":null,
      "hashes":{"bctls-jdk15on.jar":"d819ecaf7c192ededad3af7946618fd22970896186626f50eb423d3466daa635"},
      "licenses":[{
        "name":"Bouncy Castle Licence",
        "url":"http://www.bouncycastle.org/licence.html",
        "distribution":"repo"
      }],
      "minJRE":"JVM_1_5",
      "name":"Bouncy Castle JSSE provider and TLS/DTLS API",
      "version":"1.79"
    },
    {
      "changes":"1.80\t: Defects Fixed\r\n - A splitting issue for ML-KEM lead to an incorrect size for kemct in KEMRecipientInfos. This has been fixed.\r\n - The PKCS12 KeyStore has been adjusted to prevent accidental doubling of the Oracle trusted certificate attribute (results in an IOException when used with the JVM PKCS12 implementation).\r\n - The SignerInfoGenerator copy constructor was ignoring the certHolder field. This has been fixed.\r\n - The getAlgorithm() method return value for a CompositePrivateKey was not consistent with the corresponding getAlgorithm() return value for the CompositePrivateKey. This has been fixed.\r\n - The international property files were missing from the bcjmail distribution. This has been fixed.\r\n - Issues with ElephantEngine failing on processing large/multi-block messages have been addressed.\r\n - GCFB mode now fully resets on a reset.\r\n - The lightweight algorithm contestants: Elephant, ISAP, PhotonBeetle, Xoodyak now support the use of the AEADParameters class and provide accurate update/doFinal output lengths.\r\n - An unnecessary downcast in CertPathValidatorUtilities was resulting in the ignoring of URLs for FTP based CRLs. This has been fixed.\r\n - A regression in the OpenPGP API could cause NoSuchAlgorithmException to be thrown when attempting to use SHA-256 in some contexts. This has been fixed.\r\n - EtsiTs1029411TypesAuthorization was missing an extension field. This has been added.\r\n - Interoperability issues with single depth LMS keys have been addressed.\r\n \r\nAdditional Features and Functionality\r\n - CompositeSignatures now updated to draft-ietf-lamps-pq-composite-sigs-03.\r\n - ML-KEM, ML-DSA, SLH-DSA, and Composite private keys now use raw encodings as per the latest drafts from IETF 121: draft-ietf-lamps-kyber-certificates-06, draft-ietf-lamps-dilithium-certificates-05, and draft-ietf-lamps-x509-slhdsa.\r\n - Initial support has been added for RFC 9579 PBMAC1 in the PKCS API.\r\n - Support has been added for EC-JPAKE to the lightweight API.\r\n - Support has been added for the direct construction of S/MIME AuthEnvelopedData objects, via the SMIMEAuthEnvelopedData class.\r\n - An override \"org.bouncycastle.asn1.allow_wrong_oid_enc\" property has been added to disable new OID encoding checks (use with caution).\r\n - Support has been added for the PBEParemeterSpec.getParameterSpec() method where supported by the JVM.\r\n - ML-DSA/SLH-DSA now return null for Signature.getParameters() if no context is provided. This allows the algorithms to be used with the existing Java key tool.\r\n - HQC has been updated to reflect the reference implementation released on 2024-10-30.\r\n - Support has been added to the low-level APIs for the OASIS Shamir Secret Splitting algorithms.\r\n - BCJSSE: System property \"org.bouncycastle.jsse.fips.allowGCMCiphersIn12\" no longer used. FIPS TLS 1.2 GCM suites can now be enabled according to JcaTlsCrypto#getFipsGCMNonceGeneratorFactory (see JavaDoc for details) if done in alignment with FIPS requirements.\r\n - Support has been added for OpenPGP V6 PKESK and message encryption.\r\n - PGPSecretKey.copyWithNewPassword() now includes AEAD support.\r\n - The ASCON family of algorithms have been updated in accordance with the published FIPS SP 800-232 draft.",
      "date":"2025-02-08T20:14:57.662+01:00",
      "dependencies":[
        {
          "groupId":"org.bouncycastle",
          "artifactId":"bcprov-jdk15to18",
          "version":"1.80",
          "type":"jar"
        },
        {
          "groupId":"org.bouncycastle",
          "artifactId":"bcutil-jdk15to18",
          "version":"1.80",
          "type":"jar"
        }
      ],
      "description":"The Bouncy Castle Java APIs for TLS and DTLS, including a provider for the JSSE.",
      "files":null,
      "hashes":{
        "../code-ressourcen/bctls-jdk15on-sources.jar":"dc02bb6e789e6dedab31452588246683cf5149818566868742d60c5e1b39b0dd",
        "bctls-jdk15on.jar":"9c835d8c9439786a59766dd1e142df2a21dc06978ceedc65d03b1ebfe9b543c1"
      },
      "licenses":[{
        "name":"Bouncy Castle Licence",
        "url":"http://www.bouncycastle.org/licence.html",
        "distribution":"repo"
      }],
      "minJRE":"JVM_1_5",
      "name":"Bouncy Castle JSSE provider and TLS/DTLS API",
      "version":"1.80"
    },
    {
      "changes":"1.81\t: Defects Fixed\r\n - A potention NullPointerException in the KEM KDF KemUtil class has been removed.\r\n - Overlapping input/output buffers in doFinal could result in data corruption. This has been fixed.\r\n - Fixed Grain-128AEAD decryption incorrectly handle MAC verification.\r\n - Add configurable header validation to prevent malicious header injection in PGP cleartext signed messages; Fix signature packet encoding issues in PGPSignature.join() and embedded signatures while phasing out legacy format.\r\n - Fixed ParallelHash initialization stall when using block size B=0.\r\n - The PRF from the PBKDF2 function was been lost when PBMAC1 was initialized from protectionAlgorithm. This has been fixed.\r\n - The lowlevel DigestFactory was cloning MD5 when being asked to clone SHA1. This has been fixed.\r\n \r\nAdditional Features and Functionality\r\n - XWing implementation updated to draft-connolly-cfrg-xwing-kem/07/\r\n - Further support has been added for generation and use of PGP V6 keys\r\n - Additional validation has been added for armored headers in Cleartext Signed Messages.- - The PQC signature algorithm proposal Mayo has been added to the low-level API and the BCPQC provider.\r\n - The PQC signature algorithm proposal Snova has been added to the low-level API and the BCPQC provider.\r\n - Support for ChaCha20-Poly1305 has been added to the CMS/SMIME APIs.\r\n - The Falcon implementation has been updated to the latest draft.\r\n - Support has been added for generating keys which encode as seed-only and expanded-key-only for ML-KEM and ML-DSA private keys.\r\n - Private key encoding of ML-DSA and ML-KEM private keys now follows the latest IETF draft.\r\n - The Ascon family of algorithms has been updated to the initial draft of SP 800-232. Some additional optimisation work has been done.\r\n - Support for ML-DSA's external-mu calculation and signing has been added to the BC provider.\r\n - CMS now supports ML-DSA for SignedData generation.\r\n - Introduce high-level OpenPGP API for message creation/consumption and certificate evaluation.\r\n - Added JDK21 KEM API implementation for HQC algorithm.\r\n - BCJSSE: Strip trailing dot from hostname for SNI, endpointID checks.\r\n - BCJSSE: Draft support for ML-KEM updated (draft-connolly-tls-mlkem-key-agreement-05).\r\n - BCJSSE: Draft support for hybrid ECDHE-MLKEM (draft-ietf-tls-ecdhe-mlkem-00).\r\n - BCJSSE: Optionally prefer TLS 1.3 server's supported_groups order (BCSSLParameters.useNamedGroupsOrder).",
      "date":"2025-06-24T15:20:02.371+02:00",
      "dependencies":[{
        "groupId":"org.bouncycastle",
        "artifactId":"bcutil-jdk15to18",
        "version":"[1.81,1.82)",
        "type":"jar"
      }],
      "description":"The Bouncy Castle Java APIs for the TLS, including a JSSE provider. The APIs are designed primarily to be used in conjunction with the BC Java provider but may also be used with other providers providing cryptographic services. This jar is designed to best work with Java 1.5 to Java 1.8.",
      "files":null,
      "hashes":{
        "../code-ressourcen/bctls-jdk15on-sources.jar":"9de19df1010d6bd74c0db81ec7e0900b3a0059a169328effaf137742446d333e",
        "bctls-jdk15on.jar":"7521d0c407a8b185dbd8c93fc6362caeaee882cc7db6ca26f2f913a0b0fe2fe0"
      },
      "licenses":[{
        "name":"Bouncy Castle Licence",
        "url":"https://www.bouncycastle.org/licence.html",
        "distribution":"repo"
      }],
      "minJRE":"JVM_1_5",
      "name":"Bouncy Castle TLS/JSSE APIs",
      "version":"1.81"
    }
  ],
  "installed":{
    "changes":"1.82\t: Defects Fixed\r\n - SNOVA and MAYO are now correctly added to the JCA provider module-info file.\r\n - TLS: Avoid nonce reuse error in JCE AEAD workaround for pre-Java7.\r\n - BCJSSE: Session binding map is now shared across all stages of the session lifecycle (SunJSSE compatibility).\r\n - The CMCEPrivateKeyParameters#reconstructPublicKey method was returning an empty byte array. It now returns an encoding of the public key.\r\n - CBZip2InputStream no longer auto-closes at end-of-contents.\r\n - The BC CertPath implementation was eliminating certificates on the bases of the Key-ID. This is not in accordance with RFC 4158 and has been fixed.\r\n - Support for the previous set of libOQS Falcon OIDs has been restored.\r\n - The BC CipherInputStream could throw an exception if asked to handle an AEAD stream consisting of the MAC only. This has been fixed.\r\n - Some KeyAgreement classes were missing in the Java 11 class hierarchy. This has been fixed.\r\n - A typo in a constant name in the HPKE class has been fixed and the old constant deprecated.\r\n - Fuzzing analysis has been done on the OpenPGP API and additional code has been added to prevent escaping exceptions.\r\n \r\nAdditional Features and Functionality\r\n - SHA3Digest, CSHAKE, TupleHash, KMAC now provide support for Memoable and EncodableService.\r\n - BCJSSE: Added support for integrity-only cipher suites in TLS 1.3 per RFC 9150.\r\n - BCJSSE: Added support for system properties \"jdk.tls.client.maxInboundCertificateChainLength\" and \"jdk.tls.server.maxInboundCertificateChainLength\".\r\n - BCJSSE: Added support for ML-DSA signature schemes in TLS 1.3 per draft-ietf-tls-mldsa-00.\r\n - The Composite post-quantum signatures implementation has been updated to the latest draft (07) draft-ietf-lamps-pq-composite-sigs.\r\n - \"_PREHASH\" implementations are now provided for all composite signatures to allow the hash of the date to be used instead of the actual data in signature calculation.\r\n - The gradle build can now be used to generate an Bill of Materials (BOM) file.\r\n - It is now possible to configure the SignerInfoVerifierBuilder used by the SignedMailValidator class.\r\n - The Ascon family of algorithms has been updated with the latest published changes.\r\n - Composite signature keys can now be constructed from the individual keys of the algorithms composing the composite.\r\n - PGPSecretKey, PGPSignatureGenerator now support version 6.\r\n - Further optimisation work has been done on ML-KEM public key validation.\r\n - Zeroization of passwords in the JCA PKCS12 key store has been improved.\r\n - The \"org.bouncycastle.drbg.effective_256bits_entropy\" property has been added for platforms where the entropy source is not producing 1 full bit of entropy per bit and additional bits are required (default value 282).\r\n - Support has been added to the CMS content encryptors to allow a generated key to be passed in, rather than always having them generate their own.\r\n - OpenPGPKeyGenerator now allows for the use of empty UserIDs (version 4 compatibility).\r\n - The HQC KEM has been updated with the latest draft updates.\r\n \r\nAdditional Notes\r\n - The legacy post-quantum package has now been removed.",
    "date":"2025-09-19T11:01:25.47+02:00",
    "dependencies":[{
      "groupId":"org.bouncycastle",
      "artifactId":"bcutil-jdk15to18",
      "version":"1.82",
      "type":"jar"
    }],
    "description":"The  Bouncy Castle Java APIs for the TLS, including a JSSE provider (except in Java 4). The APIs are designed primarily to be used in conjunction with the BC Java provider but may also be used with other providers providing cryptographic services. This jar is designed to best work with Java 1.5 to Java 1.8.",
    "files":[
      "",
      "bctls-jdk15to18-javadoc.jar",
      "bctls-jdk15to18-javadoc.jar.asc",
      "bctls-jdk15to18-javadoc.jar.md5",
      "bctls-jdk15to18-javadoc.jar.sha1",
      "bctls-jdk15to18-javadoc.jar.sha256",
      "bctls-jdk15to18-javadoc.jar.sha512",
      "bctls-jdk15to18-sources.jar",
      "bctls-jdk15to18-sources.jar.asc",
      "bctls-jdk15to18-sources.jar.md5",
      "bctls-jdk15to18-sources.jar.sha1",
      "bctls-jdk15to18-sources.jar.sha256",
      "bctls-jdk15to18-sources.jar.sha512",
      "bctls-jdk15to18.jar",
      "bctls-jdk15to18.jar.asc",
      "bctls-jdk15to18.jar.md5",
      "bctls-jdk15to18.jar.sha1",
      "bctls-jdk15to18.jar.sha256",
      "bctls-jdk15to18.jar.sha512",
      "bctls-jdk15to18.pom",
      "bctls-jdk15to18.pom.asc",
      "bctls-jdk15to18.pom.md5",
      "bctls-jdk15to18.pom.sha1",
      "bctls-jdk15to18.pom.sha256",
      "bctls-jdk15to18.pom.sha512",
      "meta.json"
    ],
    "hashes":{
      "../code-ressourcen/bctls-jdk15on-sources.jar":"b02ac64cf7aec2376e7d4736496b8339f5a158b3f623b4ae1d5d77c220b03cde",
      "bctls-jdk15on.jar":"0289ade81c12a74e4726e0f2961933004546ffd740c3a3ce821fbbbd2071e3f7"
    },
    "licenses":[{
      "name":"Bouncy Castle Licence",
      "url":"https://www.bouncycastle.org/licence.html",
      "distribution":"repo"
    }],
    "minJRE":"JVM_1_5",
    "name":"Bouncy Castle TLS/JSSE APIs",
    "version":"1.82"
  },
  "minJRE":"1.6",
  "provider":"maven",
  "renames":{
    "jdk15to18":"jdk15on",
    "(.*-sources.*)":"../code-ressourcen/$1"
  },
  "requiredBy":[],
  "version":null,
  "autoRenameEnabled":true,
  "confirm":true
}